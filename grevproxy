 
#!/bin/bash
# Por C0nt05

# Verifica se o script está sendo executado como root
if [[ $EUID -ne 0 ]]; then
    dialog --title "Erro" --msgbox "Este script deve ser executado como root ou com sudo." 5 60
    exit 1
fi

# Verifica se o arquivo /usr/local/bin/revproxy já existe
if [ -f /usr/local/bin/revproxy ]; then
    revproxyInstalado=true
fi

# Função para instalar/atualizar revproxy
install_revproxy() {
    clear
    if [ ! -f /usr/local/bin/revproxy ]; then
        echo ""
        echo -e "${amarelo}Instalando revproxy...${semCor}" && sleep 1
        wget -q -O /usr/local/bin/revproxy https://raw.githubusercontent.com/talesam/revproxy/main/revproxy
        chmod +x /usr/local/bin/revproxy
        echo -e "${verde}revproxy instalado com sucesso!${semCor} Para executar use o comando ${rosa}revproxy${semCor}"
        
        install_proxy # Chama a função para instalar o proxy
        revproxyInstalado=true
        echo ""
    else
        echo -e "${azul}RevProxy já está instalado.${semCor}"
    fi
}

# Função para verificar e atualizar a versão do script
check_update() {
    clear
    versaoRemota=$(wget -qO- "$versaoRemota_url")
    if [ "$versaoRemota" != "$versaoLocal" ]; then
        echo -e "${amarelo}Uma nova versão do script está disponível!${semCor}"
        echo -e "${amarelo}Versão Atual: $versaoLocal, Nova Versão: $versaoRemota${semCor}"

        # Implementação da lógica de atualização
        echo -e "${amarelo}Atualizando script...${semCor}"
        wget -q -O /usr/local/bin/revproxy https://raw.githubusercontent.com/talesam/revproxy/main/revproxy
        chmod +x /usr/local/bin/revproxy
        echo -e "${verde}Script atualizado para a versão $versaoRemota. Por favor, execute-o novamente.${semCor}"
        exit 0
    else
        echo ""
        echo -e "${verde}Você já está na versão mais recente ($versaoLocal)${semCor}"
        echo ""
    fi
}

# Função para solicitar e validar a porta
get_port() {
    local port
    port=$(dialog --title "Insira a Porta" --inputbox "Digite a porta (padrão 80):" 8 40 80 3>&1 1>&2 2>&3)

    if ! [[ $port =~ ^[0-9]+$ ]] || [ $port -le 0 ] || [ $port -gt 65535 ]; then
        dialog --title "Erro" --msgbox "Porta inválida. Por favor, insira um número entre 1 e 65535." 5 50
        return 1
    fi

    echo $port
}

# Função para solicitar o nome da VPN
get_vpn_name() {
    local nomeVpn
    nomeVpn=$(dialog --title "Nome da VPN" --inputbox "Digite o nome da VPN:" 8 40 3>&1 1>&2 2>&3)

    if [ -z "$nomeVpn" ]; then
        dialog --title "Erro" --msgbox "Nome da VPN não pode ser vazio." 5 50
        return 1
    fi

    echo $nomeVpn
}

# Função para instalar o proxy
install_proxy() {
    clear
    echo ""
    if [ -f /usr/bin/proxy.bak ]; then
        echo -e " ${azul}*${semCor} ${amarelo}Um backup do proxy já existe. Instalação cancelada para evitar sobrescrever o backup.${semCor}"
        echo ""
        return
    fi
    if [ -f /usr/bin/proxy ]; then
        mv /usr/bin/proxy /usr/bin/proxy.bak
        echo -e "${amarelo}Backup do proxy atual salvo como proxy.bak${semCor}"
    fi
    curl -s -L -o /tmp/proxy https://github.com/talesam/revproxy/raw/main/proxy
    chmod +x /usr/bin/proxy
    clear
    echo ""
    echo -e "${verde}Proxy instalado com sucesso!${semCor}"
}

# Função para restaurar o proxy original
restore_proxy() {
    clear
    echo ""
    if [ -f /usr/bin/proxy.bak ]; then
        mv /usr/bin/proxy.bak /usr/bin/proxy
        echo -e " ${verde}*${semCor} Proxy original restaurado com sucesso."
        echo ""
        revproxyInstalado=false
    else
        echo -e "${vermelha}Backup do proxy não encontrado.${semCor}"
        echo ""
    fi
}

# Função para listar portas em execução
list_ports() {
    clear
    echo -e "${amarelo}Portas em execução:${semCor}"
    netstat -tuln | grep LISTEN
}

# Função para matar processo em uma porta específica
kill_port() {
    local port
    port=$(dialog --title "Encerrar Processo" --inputbox "Digite a porta para encerrar o processo:" 8 40 3>&1 1>&2 2>&3)

    pid=$(lsof -t -i:$port)
    if [ -n "$pid" ]; then
        kill $pid
        dialog --title "Sucesso" --msgbox "Processo na porta $port encerrado." 5 50
    else
        dialog --title "Erro" --msgbox "Nenhum processo encontrado na porta $port." 5 50
    fi
}

# Menu principal
while true; do
    exec 3>&1
    selection=$(dialog \
        --backtitle "RevProxy - $versaoLocal" \
        --title "Menu Principal" \
        --clear \
        --cancel-label "Sair" \
        --menu "Escolha uma opção:" 15 50 4 \
        "1" "Instalar Proxy" \
        "2" "Restaurar Proxy Original" \
        "3" "Proxy com HTTP e SSH (APENAS)" \
        "4" "Proxy com HTTP e OpenVPN (TUDO)" \
        "5" "Listar portas em execução" \
        "6" "Encerrar processo em uma porta" \
        "7" "Verificar atualizações do script" \
        2>&1 1>&3)
    exit_status=$?
    exec 3>&-
    if [ $exit_status = 1 ]; then
        break
    fi

    case $selection in
        1) install_revproxy ;;
        2) restore_proxy ;;
        3) [ "$revproxyInstalado" = true ] && run_proxy "ssh" ;;
        4) [ "$revproxyInstalado" = true ] && run_proxy "openvpn" ;;
        5) list_ports ;;
        6) kill_port ;;
        7) check_update ;;
    esac
done

# Limpa a tela ao sair
clear
